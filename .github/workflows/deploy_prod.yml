name: Production Deploy

on:
  pull_request:
    types: [ closed ]
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  #   Android 배포
  android_deploy:
    runs-on: macos-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'

      - name: Install Java17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Fastlane
        run: |
          brew install fastlane

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.29.0'

      - run: flutter --version
      - run: flutter pub get
      - run: flutter pub run build_runner build --delete-conflicting-outputs


      # 키스토어 파일 복원
      - name: Setup keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_JKS_BASE_64 }}" | base64 --decode > android/app/keystore/upload-keystore.jks

      # key.properties 파일 생성
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_KEY_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEYSTORE_STORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEYSTORE_ALIAS }}" >> android/key.properties
          echo "storeFile=../app/key.jks" >> android/app/keystore/key.properties

      - name: Build AppBundle
        run: flutter build appbundle --release --flavor prod -t lib/core/config/env/prod.dart --no-tree-shake-icons

      # 배포
      - name: fastlane internal upload
        env:
          ANDROID_JSON_KEY: ${{ secrets.ANDROID_JSON_KEY }}
        run: |
          cd android
          fastlane deploy


  # iOS 배포
  ios_deploy:
    runs-on: macos-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'

      - name: Install Java17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Fastlane
        run: |
          brew install fastlane

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.29.0'

      - run: flutter --version
      - run: flutter clean
      - run: flutter pub get
      - run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Flutter Build
        run: |
          cd ios
          pod install
          cd ..
          flutter build ios --release --flavor prod -t lib/core/config/env/prod.dart --no-tree-shake-icons --verbose --no-codesign

      # 배포
      - name: Fastlane internal upload
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          APPSTORE_TEAM_ID: ${{ secrets.APPSTORE_TEAM_ID }}
          APPSTORE_ITC_TEAM_ID: ${{ secrets.APPSTORE_ITC_TEAM_ID }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
          APPSTORE_KEY_CONTENT: ${{ secrets.APPSTORE_KEY_CONTENT }}
        run: |
          cd ios
          fastlane deploy
